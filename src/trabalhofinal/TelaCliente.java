/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package trabalhofinal;

import trabalhofinal.Veiculo.Veiculo;
import java.text.ParseException;
import java.util.ArrayList;
import trabalhofinal.Tabelas.ClienteTableModel;
import trabalhofinal.Cliente.Cliente;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author goldb
 */
public class TelaCliente extends javax.swing.JFrame {
    private TelaInicial locadora;
    private ClienteTableModel modeloTabela = new ClienteTableModel();
    /**
     * Creates new form TelaInicial
     */
    public TelaCliente() {
        initComponents();
        this.setLocationRelativeTo(null);
        formataCampo();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        bListar = new javax.swing.JButton();
        bIncluir = new javax.swing.JButton();
        bExcluir = new javax.swing.JButton();
        bAtualizar = new javax.swing.JButton();
        lNome = new javax.swing.JLabel();
        lRG = new javax.swing.JLabel();
        tRG = new javax.swing.JTextField();
        lCPF = new javax.swing.JLabel();
        tCPF = new javax.swing.JTextField();
        lRua = new javax.swing.JLabel();
        tRua = new javax.swing.JTextField();
        lNumero = new javax.swing.JLabel();
        lCidade = new javax.swing.JLabel();
        tCidade = new javax.swing.JTextField();
        lUF = new javax.swing.JLabel();
        lCEP = new javax.swing.JLabel();
        lSNome = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        tNome = new javax.swing.JFormattedTextField();
        tSNome = new javax.swing.JFormattedTextField();
        tNumero = new javax.swing.JFormattedTextField();
        tUF = new javax.swing.JFormattedTextField();
        tCEP = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        tabela.setModel(modeloTabela);
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabela);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bListar.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        bListar.setText("Listar");
        bListar.setMaximumSize(new java.awt.Dimension(50, 22));
        bListar.setMinimumSize(new java.awt.Dimension(50, 22));
        bListar.setPreferredSize(new java.awt.Dimension(50, 22));
        bListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bListarActionPerformed(evt);
            }
        });

        bIncluir.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        bIncluir.setText("Incluir");
        bIncluir.setPreferredSize(new java.awt.Dimension(50, 22));
        bIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bIncluirActionPerformed(evt);
            }
        });

        bExcluir.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        bExcluir.setText("Excluir");
        bExcluir.setPreferredSize(new java.awt.Dimension(50, 22));
        bExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExcluirActionPerformed(evt);
            }
        });

        bAtualizar.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        bAtualizar.setText("Atualizar");
        bAtualizar.setPreferredSize(new java.awt.Dimension(50, 22));
        bAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAtualizarActionPerformed(evt);
            }
        });

        lNome.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lNome.setText("Nome:");

        lRG.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lRG.setText("RG:");

        lCPF.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lCPF.setText("CPF:");

        lRua.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lRua.setText("Rua:");

        lNumero.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lNumero.setText("NÂº:");

        lCidade.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lCidade.setText("Cidade:");

        lUF.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lUF.setText("UF:");

        lCEP.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lCEP.setText("CEP:");

        lSNome.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lSNome.setText("Sobrenome:");

        tCEP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tCEPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bListar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lRua)
                                        .addComponent(lCidade))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tCidade)
                                        .addComponent(tRua, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lNumero)
                                        .addComponent(lUF))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tUF, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lCEP)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, 0))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lNome)
                                        .addComponent(lRG))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tRG, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                        .addComponent(tNome))
                                    .addGap(16, 16, 16)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lSNome)
                                        .addComponent(lCPF))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tCPF, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                        .addComponent(tSNome))))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNome)
                    .addComponent(lSNome)
                    .addComponent(tNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tSNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lRG)
                    .addComponent(tRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lCPF)
                    .addComponent(tCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lRua)
                    .addComponent(tRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lNumero)
                    .addComponent(tNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lCidade)
                    .addComponent(tCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lUF)
                    .addComponent(lCEP)
                    .addComponent(tUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bListar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Clientes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAtualizarActionPerformed
        String rg = tRG.getText();
        if ( tRua.getText().equals("") || tNumero.getText().equals("") || tCidade.getText().equals("") || tUF.getText().equals("  ") || tCEP.getText().equals("     -   ") ) {
            JOptionPane.showMessageDialog(this, "Algum campo ficou sem ser preenchido");
        } else {
            String endereco = tRua.getText() + "," + tNumero.getText().trim() + "," + tCidade.getText() + "," + tUF.getText() + "," + tCEP.getText();
            List<Cliente> list = locadora.getClientes();
            if (rg.equals("")) {
                JOptionPane.showMessageDialog(this, "Nenhum cliente foi selecionado para atualizaÃ§Ã£o!");
            } else {
                for (Cliente cliente : list) {
                    if (cliente.getRG().equals(rg)) {
                        cliente.setEndereco(endereco);
                        JOptionPane.showMessageDialog(this, "Cliente atualizado com sucesso");
                        limparCampos();
                    }
                }
            }
        }
        
    }//GEN-LAST:event_bAtualizarActionPerformed

    private void bExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExcluirActionPerformed
        String rg = tRG.getText();
        Cliente remocao = null;
        if (rg.equals("")) {
            JOptionPane.showMessageDialog(this, "Nenhum cliente foi selecionado para remoÃ§Ã£o!");
        } else {
            List<Cliente> list = this.locadora.getClientes();
            for (Cliente f : list) {
                if (f.getRG().equals(rg)) {
                    remocao = f;
                } 
            }
            
            if (remocao != null) {
                List<Veiculo> listV = this.locadora.getVeiculos();
                List<Veiculo> listVI = new ArrayList<Veiculo>();
                boolean result = true;
                for (Veiculo v : listV) {
                    if (v.getLocacao() != null) {
                        listVI.add(v);
                    }
                }
                for (Veiculo v : listVI) {
                    if (v.getLocacao().getCliente().getRG().equals(remocao.getRG())) {
                        result = false;
                    }
                }
                if (result) {
                    modeloTabela.removeCliente(remocao);
                    this.locadora.removeCliente(remocao);
                    limparCampos();
                    modeloTabela.limpaTabela();
                    JOptionPane.showMessageDialog(this, "Cliente removido com sucesso");
                } else {
                    JOptionPane.showMessageDialog(this, "NÃ£o foi possÃ­vel remover o cliente devido a um veiculo estar locado em seu nome!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Esse cliente ainda nÃ£o foi cadastrado no sistema!");
            }

        }
        
        
    }//GEN-LAST:event_bExcluirActionPerformed

    private void bIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bIncluirActionPerformed
        List<Cliente> list = this.locadora.getClientes();
        for (Cliente cliente : list) {
            if (cliente.getCPF().equals(tCPF.getText())) {
                JOptionPane.showMessageDialog(this, "Cliente com o CPF informado jÃ¡ foi cadastrado no sistema");
                limparCampos();
            }
        }
        int rg = 0;
        String rgS = "";
        int cpf = 0;
        String cpfS = "";
        try {
            rg = Integer.parseInt(tRG.getText());
            rgS = "" + rg;
            try {
                cpf = Integer.parseInt(tCPF.getText());
                cpfS = "" + cpf;
                String nome = tNome.getText().trim();
                String sobrenome = tSNome.getText().trim();
                String endereco = tRua.getText() + "," + tNumero.getText().trim() + "," + tCidade.getText() + "," + tUF.getText() + "," + tCEP.getText();
                if ( nome.equals("") || sobrenome.equals("") || cpfS.equals("") || rgS.equals("") || tRua.getText().equals("") || tNumero.getText().equals("") || tCidade.getText().equals("") || tUF.getText().equals("  ") || tCEP.getText().equals("     -   ")  ) {
                    JOptionPane.showMessageDialog(this, "Algum campo ficou sem ser preenchido");
                } else {
                    Cliente f = new Cliente(nome,sobrenome,rgS,cpfS,endereco);
                    this.locadora.adicionaCliente(f);
                    JOptionPane.showMessageDialog(this, "Cliente cadastrado com sucesso!");
                    limparCampos();
                }       
            }
            catch(Exception err) {
                JOptionPane.showMessageDialog(this, "CPF nÃ£o foi inserido ou estÃ¡ incorreto!");
            }
        }
        catch (Exception err) {
            JOptionPane.showMessageDialog(this, "RG nÃ£o foi inserido ou estÃ¡ incorreto!");

        }
    }//GEN-LAST:event_bIncluirActionPerformed

    private void bListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bListarActionPerformed
        List<Cliente> list = locadora.getClientes();
        modeloTabela.setListaClientes(list);
    }//GEN-LAST:event_bListarActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        Cliente c = modeloTabela.getCliente(tabela.getSelectedRow());
        tNome.setText(c.getNome());
        tSNome.setText(c.getSobreNome());
        tRG.setText(c.getRG());
        tCPF.setText(c.getCPF());
        String[] endereco = c.getEndereco().split(",");
        tRua.setText(endereco[0]);
        tNumero.setText(endereco[1]);
        tCidade.setText(endereco[2]);
        tUF.setText(endereco[3]);
        tCEP.setText(endereco[4]);
        tNome.setEditable(false);
        tSNome.setEditable(false);
        tRG.setEditable(false);
        tCPF.setEditable(false);
    }//GEN-LAST:event_tabelaMouseClicked

    private void tCEPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tCEPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tCEPActionPerformed


    public void init(TelaInicial locadora) {
        this.locadora = locadora;
        TelaCliente inicial = this;
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                inicial.setVisible(true);
            }
        });
    }
    
    void adicionaCliente(Cliente f) {
        this.locadora.adicionaCliente(f);
    }

    public List<Cliente> getClientes() {
         return this.locadora.getClientes();
    }
    
    private void limparCampos() {
        tNome.setText("");
        tSNome.setText("");
        tCPF.setText("");
        tRG.setText("");
        tRua.setText("");
        tNumero.setText("");
        tCidade.setText("");
        tUF.setText("");
        tCEP.setText("");
        tNome.setEditable(true);
        tSNome.setEditable(true);
        tRG.setEditable(true);
        tCPF.setEditable(true);
    }
    
    private void formataCampo() {
        try {
            MaskFormatter maskString = new MaskFormatter("?????????????");
            MaskFormatter maskN = new MaskFormatter("####");
            MaskFormatter maskUF = new MaskFormatter("UU");
            MaskFormatter maskCEP = new MaskFormatter("#####-###");
            maskString.install(tNome);
            maskString.install(tSNome);
            maskN.install(tNumero);
            maskUF.install(tUF);
            maskCEP.install(tCEP);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "ERRO! Algum campo foi mal preenchido!");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAtualizar;
    private javax.swing.JButton bExcluir;
    private javax.swing.JButton bIncluir;
    private javax.swing.JButton bListar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lCEP;
    private javax.swing.JLabel lCPF;
    private javax.swing.JLabel lCidade;
    private javax.swing.JLabel lNome;
    private javax.swing.JLabel lNumero;
    private javax.swing.JLabel lRG;
    private javax.swing.JLabel lRua;
    private javax.swing.JLabel lSNome;
    private javax.swing.JLabel lUF;
    private javax.swing.JFormattedTextField tCEP;
    private javax.swing.JTextField tCPF;
    private javax.swing.JTextField tCidade;
    private javax.swing.JFormattedTextField tNome;
    private javax.swing.JFormattedTextField tNumero;
    private javax.swing.JTextField tRG;
    private javax.swing.JTextField tRua;
    private javax.swing.JFormattedTextField tSNome;
    private javax.swing.JFormattedTextField tUF;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

    

}
    
  
